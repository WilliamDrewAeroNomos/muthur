/**
 * 
 */
package com.csc.muthur.server.model.event;

/**
 * 
 * 
 * @author <a href=mailto:Nexsim-support@csc.com>Nexsim</a>
 * @version $Revision$
 * 
 */
public enum EventAttributeName {
	dataBlock,
	federateName,
	federateRegistrationHandle,
	federationExecutionHandle,
	registrationID,
	success,
	status,
	fedExecModel,
	femName,
	fedExecModelUUID,
	requiredFederates,
	requiredFederate,
	fems,
	subscriptions,
	className,
	subscriptionQueueName,
	event,
	type,
	controlBlock,
	createEventTimeMSecs,
	eventSource,
	eventName,
	timeToLiveSecs,
	eventUUID,
	registrationHandle,
	errorBlock,
	errorDescription,
	eventType,
	name,
	aircraftID,
	tailNumber,
	callSign,
	positionData,
	latitudeDegrees,
	longitudeDegrees,
	altitudeFt,
	groundspeedKts,
	headingDegrees,
	airspeedKts,
	pitchDegrees,
	rollDegrees,
	yawDegrees,
	sector,
	center,
	flightPlanData,
	taxiOutData,
	departureData,
	source,
	taxiOutTimeMSecs,
	actualDeptTime,
	federationExecutionModelHandle,
	description,
	dataObjectAsXML,
	dataObjectUUID,
	cruiseAltitudeFt,
	dataType,
	durationFederationExecutionMSecs,
	fedExecModelLogicalStartTimeMSecs,
	aircraftType,
	actualDepartureTimeMSecs,
	arrivalTime,
	routePlan,
	departureCenter,
	arrivalCenter,
	departureFix,
	arrivalFix,
	physicalAircraftClass,
	weightAircraftClass,
	userAircraftClass,
	numOfAircraft,
	airborneEquipmentQualifier,
	cruiseSpeedKts,
	defaultDurationWithinStartupProtocolMSecs,
	durationJoinFederationMSecs,
	durationRegisterPublicationMSecs,
	durationRegisterSubscriptionMSecs,
	durationRegisterToRunMSecs,
	durationTimeToWaitAfterTermination,
	arrivalData,
	actualArrivalTimeMSecs,
	terminationReason,
	federateEventQueueName,
	federateHeartBeatIntervalSecs,
	federateState,
	heartBeatEnabled,
	timeManagementQueueName,
	timeIntervalMSecs,
	startFederateRequestAck,
	startFederateResponseAck,
	resumeFederateResponseAck,
	pauseFederateResponseAck,
	lengthOfPauseMSecs,
	startFederationResponseAck,
	resumeFederationResponseAck,
	pauseFederationResponseAck,
	federationExecutionState,
	federationExecutionDirective,
	verticalspeedKts,
	aircraftOnGround,
	squawkCode,
	ident,
	aircraftTransmissionFrequency,
	autoStart,
	scenarioTimeMSecs,
	taxiInTimeMSecs,
	taxiInData,
	taxiOutGate,
	taxiInGate,
	ownershipScope,
	requesterHandle,
	plannedDepartureTimeMSecs,
	plannedArrivalTimeMSecs,
	objectCreateTimeMSecs,
	dataAction,
	ownershipEventQueueName,
	plannedDepartureRunway,
	plannedTaxiOutGate,
	plannedArrivalRunway,
	plannedTaxiInGate,
	fedExecModelStartDate,
	AirportConfiguration,
	runways,
	departureRunways,
	departureRunway,
	arrivalRunways,
	arrivalRunway,
	runwayName,
	runwayFlow,
	runwayUpperLeft,
	runwayLowerRight,
	airportID,
	airportCode,
	runway,
	attributeAccessControlUpdate,
	attributeName,
	accessControl,
	attributeAccessControlUpdates,
	naturalKey,
	atisCode,
	centerFieldWindSpeedKts,
	centerFieldWind,
	weatherData,
	metarString,
	vehicleTransmissionFrequency,
	beaconCode,
	vehicleData,
	flightPlanStatus,
	departureAirportCode,
	arrivalAirportCode,
	altimeterReading,
	atisMessage,
	federateRequestQueueName,
	transferOwnershipResponse,
	federationExecutionTimeMSecs,
	licenseKey,
	groupName,
	acLivery,
	federationDataTopicName,
	federationHostName,
	federationPort
}
